<!DOCTYPE html>
<html>
<head>
  <title>Inicio Comité</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <a href="/logout" class="btn btn-primary" style="position: absolute; top: 0; right: 0;">Cerrar sesión</a>
  <div class="container">
    <h2>Consultorías</h2>

    <% if (consultorias.length > 0) { %>
      <table class="table">
        <thead>
          <tr>
            <th>Nombre Archivo</th>
            <th>Fecha Subida</th>
            <th>Estado</th>
            <th>Calificar</th>
          </tr>
        </thead>
        <tbody>
          <% consultorias.forEach(function(consultoria) { %>
            <tr>
              <td><%= consultoria.nombre_archivo %></td>
              <td><%= consultoria.fecha_subida_archivo %></td>
              <td><%= consultoria.estado %></td>
              <td>
                <form action="/evaluar_consultoria" method="POST">
                  <input type="checkbox" name="id_consultoria" value="<%= consultoria.id_consultoria %>">
                  <input type="number" name="nota" min="0" max="70">
                  <button type="submit">Calificar</button>
                </form>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    <% } else { %>
      <p>No se ha subido ninguna consultoria</p>
    <% } %>

    <div class="my-4">
      <canvas id="myChart"></canvas>
    </div>
    <div>
      <h2>Verificación de valores</h2>
      <p>Labels: <%= labels || 'Labels no definidas' %></p>
      <p>Data: <%= data || 'Data no definida' %></p>
    </div>
    
    <script>
      // Obtén el contexto del canvas
      var ctx = document.getElementById('myChart').getContext('2d');

      // Convierte las cadenas de etiquetas y datos en arrays
      var labels = "<%= labels %>".replace(/'/g, '"').split(','); 
      var data = "<%= data %>".split(',').map(Number); 


      // Mapea los estados a los colores
      var colorMapping = {
        'Analizando': { backgroundColor: 'rgba(54, 162, 235, 0.2)', borderColor: 'rgba(54, 162, 235, 1)' },
        'Rechazado': { backgroundColor: 'rgba(255, 99, 132, 0.2)', borderColor: 'rgba(255, 99, 132, 1)' },
        'Aceptado': { backgroundColor: 'rgba(75, 192, 192, 0.2)', borderColor: 'rgba(75, 192, 192, 1)' }
      };

      // Asigna los colores de acuerdo al mapeo
      var backgroundColors = labels.map(label => colorMapping[label].backgroundColor);
      var borderColors = labels.map(label => colorMapping[label].borderColor);
      console.log('Labels:', labels);
      console.log('Data:', data);
      // Crea el gráfico
      var myChart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: labels,
          datasets: [{
            data: data,
            backgroundColor: backgroundColors,
            borderColor: borderColors,
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          legend: {
            position: 'top',
          },
          title: {
            display: true,
            text: 'Estados de las consultorías'
          },
          animation: {
            animateScale: true,
            animateRotate: true
          }
        }
      });
    </script>

  </div>
</body>
</html>
